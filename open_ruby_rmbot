#!/usr/bin/env ruby
# -*- mode: ruby; coding: utf-8 -*-
# OpenRubyRMBot, the nice and friendly robot hanging around
# in #OpenRubyRMK on irc.freenode.net. This is a Cinch
# robot (https://github.com/cinchrb/cinch) and if you
# want to customize it, you probably want to change the
# #configure section below. Also note all files inside
# plugins/ are automatically loaded and all constants
# defined below the CinchPlugins module will automatically
# be registered as plugins to the robot.

require "mkfifo"
require "cinch"

require_relative "plugins/http_server"
require_relative "plugins/pid_file"
require_relative "plugins/fifo"
require_relative "plugins/link_info"
require_relative "plugins/pega_issues"
require_relative "plugins/github_commits"

DIR      = File.dirname(File.expand_path(__FILE__))

cinch = Cinch::Bot.new do

  configure do |config|
    config.server     = "irc.freenode.net"
    config.port       = 6697
    config.ssl.use    = true
    config.ssl.verify = false

    config.channels = ["#OpenRubyRMK"]
    config.nick     = "OpenRubyRMBot"
    config.user     = "orrbot"
    config.realname = "OpenRubyRMBot"

    config.plugins.options[Cinch::PegaIssues] = {
      :base_url => "https://devel.pegasus-alpha.eu/issues"
    }

    config.plugins.options[Cinch::PidFile] = {
      :path   => "#{DIR}/tmp/orrbot.pid",
      :strict => true
    }

    config.plugins.options[Cinch::Fifo] = {
      :path => "#{DIR}/tmp/myfifo",
      :mode => 0666
    }

    config.plugins.options[Cinch::HttpServer] = {
      :host => "0.0.0.0",
      :port => 46664,
      :logfile => "/var/log/orrbot/httpserver.log"
    }

    config.plugins.plugins = [Cinch::PidFile,
                              Cinch::HttpServer,
                              Cinch::LinkInfo,
                              Cinch::Fifo,
                              Cinch::GithubCommits,
                              Cinch::PegaIssues]
  end

  trap "SIGINT" do
    bot.log("Cought SIGINT, quitting...", :info)
    bot.quit
  end

  trap "SIGTERM" do
    bot.log("Cought SIGTERM, quitting...", :info)
    bot.quit
  end

  file = File.open("/var/log/orrbot/bot.log", "a")
  file.sync = true
  loggers.push(Cinch::Logger::FormattedLogger.new(file))

end

cinch.start
